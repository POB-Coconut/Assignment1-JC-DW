{"version":3,"sources":["components/Comment.js","components/CommentList.js","reducers/comment.js","lib/styles/CenterText.js","lib/styles/LoadingText.js","pages/CommentPage.js","App.js","reducers/index.js","lib/api/client.js","lib/api/data.js","sagas/comment.js","sagas/index.js","store/index.js","lib/styles/GlobalStyles.js","index.js"],"names":["CommentWrapper","styled","div","Comment","comment","id","email","body","CommentListWrapper","ul","CommentList","comments","useSelector","state","map","FETCH_COMMENTS_REQUEST","FETCH_COMMENTS_SUCCESS","FETCH_COMMENTS_FAILURE","initialStete","fetchDone","fetchError","fetchLoading","hasMoreComments","action","type","payload","length","concat","CenterText","p","LoadingText","CommentPage","useState","page","setPage","useInView","ref","inView","dispatch","useDispatch","useEffect","data","undefined","App","path","component","rootReducer","combineReducers","dotenv","config","client","axios","create","defaults","baseURL","process","fetchCommentAPI","get","fetchCommentsSaga","commentsSaga","call","fetchApi","response","put","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","GlobalStyles","createGlobalStyle","reset","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.42bbac55.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const CommentWrapper = styled.div`\r\n  padding: 20px;\r\n  border-radius: 20px;\r\n  background: #f8f9fa;\r\n  border: 0.5px solid #ced4da;\r\n  border-radius: 20px;\r\n  margin-bottom: 12px;\r\n\r\n  & dl {\r\n    font-size: 18px;\r\n    display: flex;\r\n\r\n    & dt {\r\n      padding-right: 12px;\r\n      padding-bottom: 12px;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n\r\n  & dl:nth-last-child(1) {\r\n    display: block;\r\n    & dt {\r\n      padding-bottom: 2px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Comment = ({ comment }) => {\r\n  return (\r\n    <CommentWrapper>\r\n      <dl>\r\n        <dt>Comment Id</dt>\r\n        <dd>{comment.id}</dd>\r\n      </dl>\r\n      <dl>\r\n        <dt>Email</dt>\r\n        <dd>{comment.email}</dd>\r\n      </dl>\r\n      <dl>\r\n        <dt>Comment</dt>\r\n        <dd>{comment.body}</dd>\r\n      </dl>\r\n    </CommentWrapper>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import { useSelector } from \"react-redux\";\r\nimport Comment from \"./Comment\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CommentListWrapper = styled.ul`\r\n  width: 500px;\r\n  margin: 33px auto;\r\n`;\r\n\r\nconst CommentList = () => {\r\n  const { comments } = useSelector((state) => state.comment);\r\n\r\n  return (\r\n    <CommentListWrapper>\r\n      {comments.map((comment) => (\r\n        <li key={comment.id}>\r\n          <Comment comment={comment} />\r\n        </li>\r\n      ))}\r\n    </CommentListWrapper>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","export const FETCH_COMMENTS_REQUEST = \"FETCH_COMMENTS_REQUEST\";\r\nexport const FETCH_COMMENTS_SUCCESS = \"FETCH_COMMENTS_SUCCESS\";\r\nexport const FETCH_COMMENTS_FAILURE = \"FETCH_COMMENTS_FAILURE\";\r\n\r\nexport const fetchCommentsRequest = (data) => ({\r\n  type: FETCH_COMMENTS_REQUEST,\r\n  data, // 현재 페이지\r\n});\r\n\r\nexport const fetchCommentsSuccess = (payload) => ({\r\n  type: FETCH_COMMENTS_SUCCESS,\r\n  payload, // 10개의 데이터\r\n});\r\n\r\nexport const fetchCommentsFailure = (payload) => ({\r\n  type: FETCH_COMMENTS_FAILURE,\r\n  payload, // error 목록\r\n});\r\n\r\nconst initialStete = {\r\n  comments: [],\r\n  fetchDone: true,\r\n  fetchError: null,\r\n  fetchLoading: false,\r\n  hasMoreComments: true,\r\n};\r\n\r\nconst comment = (state = initialStete, action) => {\r\n  switch (action.type) {\r\n    case FETCH_COMMENTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        fetchDone: false,\r\n        fetchError: null,\r\n        fetchLoading: true,\r\n      };\r\n    case FETCH_COMMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        hasMoreComments: action.payload.length !== 0,\r\n        comments: state.comments.concat(action.payload),\r\n        fetchDone: true,\r\n        fetchError: null,\r\n        fetchLoading: false,\r\n      };\r\n    case FETCH_COMMENTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        fetchDone: true,\r\n        fetchError: action.payload,\r\n        fetchLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default comment;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CenterText = styled.p`\r\n  position: fixed;\r\n\r\n  left: 50%;\r\n  top: 50%;\r\n\r\n  transform: translate(-50%, -50%);\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoadingText = styled.div`\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 98%;\r\n  transform: translate(-50%, 0);\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nimport CommentList from \"../components/CommentList\";\r\n\r\nimport { fetchCommentsRequest } from \"../reducers/comment\";\r\nimport { CenterText } from \"../lib/styles/CenterText\";\r\nimport { LoadingText } from \"../lib/styles/LoadingText\";\r\n\r\nconst CommentPage = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [ref, inView] = useInView();\r\n  const dispatch = useDispatch();\r\n  const { hasMoreComments, fetchLoading, fetchError } = useSelector(\r\n    (state) => state.comment\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (inView && !fetchLoading && hasMoreComments) {\r\n      dispatch(fetchCommentsRequest(page));\r\n\r\n      const nextPage = page + 1;\r\n      setPage(nextPage);\r\n    }\r\n  }, [inView, page, fetchLoading, hasMoreComments, dispatch]);\r\n\r\n  if (fetchError) {\r\n    return <CenterText>❌네트워크 오류❌</CenterText>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CommentList />\r\n      <div ref={hasMoreComments && !fetchLoading ? ref : undefined} />\r\n      {fetchLoading && <LoadingText>⏰Loading...⏰</LoadingText>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentPage;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport CommentPage from \"./pages/CommentPage\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" component={CommentPage} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport comment from \"./comment\";\r\n\r\nconst rootReducer = combineReducers({\r\n  comment,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nconst client = axios.create();\r\n\r\nclient.defaults.baseURL = process.env.REACT_APP_BASE_URL;\r\nexport default client;\r\n","import client from \"./client\";\r\n\r\nexport const fetchCommentAPI = (page) =>\r\n  client.get(`/comments?_page=${page}&_limit=10`);\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport * as fetchApi from \"../lib/api/data\";\r\nimport {\r\n  FETCH_COMMENTS_REQUEST,\r\n  FETCH_COMMENTS_SUCCESS,\r\n  FETCH_COMMENTS_FAILURE,\r\n} from \"../reducers/comment\";\r\n\r\nfunction* fetchCommentsSaga(action) {\r\n  try {\r\n    const response = yield call(fetchApi.fetchCommentAPI, action.data);\r\n\r\n    yield put({\r\n      type: FETCH_COMMENTS_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: FETCH_COMMENTS_FAILURE,\r\n      payload: e,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* commentsSaga() {\r\n  yield takeLatest(FETCH_COMMENTS_REQUEST, fetchCommentsSaga);\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport { commentsSaga } from \"./comment\";\r\n\r\nexport function* rootSaga() {\r\n  yield all([commentsSaga()]);\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootReducer from \"../reducers\";\r\nimport { rootSaga } from \"../sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family: 'Noto Sans KR', sans-serif;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\r\nimport App from \"./App\";\r\nimport ReactDOM from \"react-dom\";\r\nimport store from \"./store\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport GlobalStyles from \"./lib/styles/GlobalStyles\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"Assignment1-JC-DW\">\r\n    <Provider store={store}>\r\n      <App />\r\n      <GlobalStyles />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}